package audience

import (
	"github.com/jfkgustav/direq/handler"
	"github.com/jfkgustav/direq/model"
	"github.com/jfkgustav/direq/view"
	"slices"
	"strconv"
)

templ Index(filtered_songs []model.Song, filters []string, decade int, showFilter bool, sortMethod string) {
	{{
		decadeFilter := 0
		if decade != 0 {
			decadeFilter = 1
		}
		filterShowStatus := "hidden"
		if showFilter {
			filterShowStatus = ""
		}
	}}
	@view.Layout() {
		<div class="container px-2 flex h-full flex-col space-y-2 lg:w-1/2 text-neutral-100 !m-0">
			<a href="/" class="text-center pt-4 text-neutral-100 font-bold text-2xl text-center">
				Önska låtar
			</a>
			<div class="rounded-md container px-4 py-1 bg-neutral-100 text-neutral-900 ">
				Sök...  
			</div>
			<div id="filter-sort-div" class="flex w-1/2 !mt-2 ">
				<button id="filterButton" class="underline px-2 rounded-t-md">Filtrera ({ strconv.Itoa(len(filters) + decadeFilter) })</button>
				<button id="sortButton" class="p-2 bg-neutral-200 rounded-md text-black">Sortera ↕️</button>
			</div>
			<div id="filter" class={ filterShowStatus + " bg-neutral-800 container rounded-b-md !m-0 pt-6 p-4" }>
				@filter(handler.Tags, filters)
			</div>
			<div id="sort" class="bg-neutral-200 hidden container !overflow-y-scroll !h-56 rounded-b-md !m-0 py-2 px-4">
				@sort(sortMethod)
			</div>
			<p class="px-4 !mt-2">{ strconv.Itoa(len(filtered_songs)) } låtar</p>
			for _, song := range filtered_songs {
				{{
				href_address := "/request-song?song_id=" + strconv.Itoa(song.ID)
				}}
				<div class="flex flex-col p-2 rounded-md container bg-neutral-800 text-sm">
					<a href={ templ.URL(href_address) }>
						@SongCard(song)
					</a>
				</div>
			}
			<a class="text-neutral-100 !mt-48" href="/mv">mv</a>
			<a class="text-neutral-100" href="/backstage">backstage</a>
		</div>
	}
	<script> 
		const filterButton = document.getElementById('filterButton');
 	 	const filterDiv = document.getElementById('filter');
 	 	const filterSortDiv = document.getElementById('filter-sort-div');
		filterButton.addEventListener('click', () => {
			filterDiv.classList.toggle('hidden');
			filterButton.classList.toggle('bg-neutral-800')
 			if (!sortDiv.classList.contains('hidden')) {
				sortDiv.classList.toggle('hidden');
				sortButton.classList.toggle('rounded-md')
				sortButton.classList.toggle('rounded-t-md')
			}
		});
		const sortButton = document.getElementById('sortButton');
 	 	const sortDiv = document.getElementById('sort');
 	 	const sortSortDiv = document.getElementById('filter-sort-div');
		sortButton.addEventListener('click', () => {
			sortDiv.classList.toggle('hidden');
			sortButton.classList.toggle('rounded-md')
			sortButton.classList.toggle('rounded-t-md')
 			if (!filterDiv.classList.contains('hidden')) {
				filterDiv.classList.toggle('hidden');
				filterButton.classList.toggle('bg-neutral-800')
			}
		});
  </script>
}

func getTags() []string {
	return handler.Tags
}

templ filter(tags []string, checkedTags []string) {
	<form action="/" class="flex flex-col space-y-3">
		@decade()
		<div class="flex flex-wrap container justify-between ">
			for _, tag := range tags {
				<div class="w-1/3 lg:w-1/6 self-center mt-2">
					@tagField(slices.Contains(checkedTags, tag), tag)
				</div>
			}
		</div>
		<div class="flex justify-between">
			<input type="submit" value="Filtrera" class="p-2 bg-neutral-300 text-neutral-900 rounded-sm"/>
			<a href="/?clear=clear" class="p-2 text-red-400 rounded-sm">Rensa filter </a>
		</div>
	</form>
}

templ tagField(checked bool, tagName string) {
	<div class="tagDiv flex space-x-1 w-3/4 rounded-md bg-neutral-200 text-neutral-900 py-1 px-2">
		<input class="tags" hidden checked?={ checked } type="checkbox" id={ tagName } name="tags" value={ tagName }/>
		<label for={ tagName }>{ tagName } </label>
		<p class="removeX hidden">X</p>
	</div>
	<script> 
		const tagObjects = document.querySelectorAll('.tags')
		const	tagDiv = document.querySelectorAll('.tagDiv')
		const removeX = document.querySelectorAll('.removeX')
		tagObjects.forEach((tag, index) => {
			tag.addEventListener('change', () => {
				tagDiv[index].classList.toggle('!bg-neutral-400');
				tagDiv[index].classList.toggle('border-2');
				tagDiv[index].classList.toggle('border-neutral-100');
				removeX[index].classList.toggle('hidden');
			});
		});
  </script>
}

templ decade() {
	<div class="flex space-x-4 align-center">
		<select name="decade" id="decade" class="text-neutral-900 p-2 rounded-sm">
			<option value="decade">Årtionde</option>
			<option value="1950">50-tal</option>
			<option value="1960">60-tal</option>
			<option value="1970">70-tal</option>
			<option value="1980">80-tal</option>
			<option value="1990">90-tal</option>
			<option value="2000">00-tal</option>
			<option value="2010">10-tal</option>
			<option value="2020">20-tal</option>
		</select>
	</div>
}

templ sort(sortMethod string) {
	<div class="flex flex-col text-neutral-900 space-y-2">
		<a class="flex border-b border-neutral-500 py-1" href="/?sort=YearAsc">År stigande <p class="ml-2" hidden?={ !(sortMethod =="" || sortMethod=="YearAsc") }>✔️ </p></a>
		<a class="flex border-b border-neutral-500 py-1" href="/?sort=YearDes">År fallande <p class="ml-2" hidden?={ !(sortMethod=="YearDes") }>✔️</p></a>
		<a class="flex border-b border-neutral-500 py-1" href="/?sort=ArtistAZ">Artist A - Ö <p class="ml-2" hidden?={ !(sortMethod=="ArtistAZ") }>✔️</p></a>
		<a class="flex border-b border-neutral-500 py-1" href="/?sort=ArtistZA">Artist Ö - A <p class="ml-2" hidden?={ !(sortMethod=="ArtistZA") }>✔️</p></a>
		<a class="flex border-b border-neutral-500 py-1" href="/?sort=TitleAZ">Låttitel A - Ö <p class="ml-2" hidden?={ !(sortMethod=="TitleAZ") }>✔️</p></a>
		<a class="flex border-b border-neutral-500 py-1" href="/?sort=TitleZA">Låttitel Ö - A <p class="ml-2" hidden?={ !(sortMethod=="TitleZA") }>✔️</p></a>
		<a class="flex border-b border-neutral-500 py-1" href="/?sort=TagAZ">Kategori A - Ö <p class="ml-2" hidden?={ !(sortMethod=="TagAZ") }>✔️</p></a>
		<a class="flex py-1" href="/?sort=TagZA">Kategori Ö - A<p class="ml-2" hidden?={ !(sortMethod=="TagZA") }>✔️</p></a>
	</div>
}
